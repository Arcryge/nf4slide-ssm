{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/brand/brand.component.css","webpack:///./src/app/brand/brand.component.html","webpack:///./src/app/brand/brand.component.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/sign-in/sign-in.component.css","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\nconst routes: Routes = [\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'sign-up', component: SignUpComponent },\n  { path: '',\n    redirectTo: '/sign-in',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \".sign-middle{\\r\\n    /* 柔性布局居中显示 */\\r\\n    display: flex;\\r\\n    align-items:center;\\r\\n    height: 100%;\\r\\n}\\r\\n.sign-context{\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    max-width: 400px;\\r\\n    width: calc(100% - 40px);\\r\\n    padding: 20px;\\r\\n    /* margin-bottom: 28px;\\r\\n    margin-top: 28px; */\\r\\n    /* 背景颜色 */\\r\\n    background-color: #fff;\\r\\n    /* 阴影 */\\r\\n    box-shadow: 0 2px 3px rgba(0,0,0,.55);\\r\\n    /* 边框 */\\r\\n    border: 1px solid #818c94;\\r\\n    border: 1px solid rgba(0,0,0,.4);\\r\\n    min-width: 320px;\\r\\n    min-height: 338px;\\r\\n}\\r\\n\\r\\n  \"","module.exports = \"<div class=\\\"sign-middle\\\" >\\n    <div class=\\\"sign-context\\\" >\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgZorroAntdModule, NZ_I18N, zh_CN } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { BrandComponent } from './brand/brand.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\nregisterLocaleData(zh);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignInComponent,\n    SignUpComponent,\n    BrandComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    NgZorroAntdModule,\n    AngularFontAwesomeModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n  ],\n  providers: [{ provide: NZ_I18N, useValue: zh_CN }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/* brand  */\\r\\n.nf4-brand{\\r\\n    font-size:2em;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n  }\\r\\n/* logo  */\\r\\n.nf4-brand__logo{\\r\\n    color: #0078d7;\\r\\n  }\\r\\n/* logo后面的“NF4 园丁助手” */\\r\\n.nf4-brand__font{\\r\\n    font-size:26px;\\r\\n    margin-left:5px;\\r\\n  }\"","module.exports = \"<!-- brand -->\\n<div class=\\\"nf4-brand\\\">\\n    <!-- logo -->\\n    <span class=\\\"nf4-brand__logo\\\"><fa name=\\\"paper-plane\\\"></fa>&nbsp;</span>\\n    <!-- NF4 园丁助手 -->\\n    <span class=\\\"nf4-brand__font\\\">NF4 园丁助手</span>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'brand-layout',\n  templateUrl: './brand.component.html',\n  styleUrls: ['./brand.component.css']\n})\nexport class BrandComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/index';\nimport {HttpClient, HttpClientModule, HttpHeaders} from '@angular/common/http';\nimport {User} from './user';\nimport {Result} from './result';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * 用户服务\n * @author wildhunt_unique\n */\nexport class UserService {\n  // user\n  userUrl: String;\n\n  userParam: User;\n\n\n  /**\n   * 得到当前登录的用户的信息 (测试完成)\n   * @returns {Observable<User>}\n   * 调用此方法的结构如下：\n   * this.userService.getLoginUser().subscribe((data: User) => this.loginUser = data);\n   */\n  getLoginUser(): Observable<User> {\n    return this.http.post<User>(this.userUrl + `fetchLoginInfo`, this.userParam, httpOptions);\n  }\n\n  /**\n   * 进行登陆操作 (测试完成)\n   * @param {User} user 要登录的用户信息, phoneNum 和 password 字段必须有值， 用这两个值进行登录验证\n   * @returns {Observable<Result>}\n   this.userService.login({\n      phoneNum: '10086',\n      password: '10086',\n      username: null,\n      userId: null,\n      avator: null\n    }).subscribe((data: Result) => this.result = data);\n   */\n  login(user: User): Observable<Result> {\n    return this.http.post<Result>(this.userUrl + `loginWithAngular`, user, httpOptions);\n  }\n\n  /**\n   * 注册用户\n   * @param {User} user\n   * @returns {Observable<Result>}\n   */\n  register(user: User): Observable<Result> {\n    return this.http.post<Result>(this.userUrl + `registerWithAngular`, user, httpOptions);\n  }\n\n  /**\n   * 验证手机号是否已经被使用过\n   * @param {String} phoneNum 需要验证的手机号码\n   * @returns {Observable<Result>}\n   */\n  exitPhoneNum(phoneNum: String): Observable<Result> {\n    return this.http.post<Result>(this.userUrl + `exitPhoneNumWithAngular`, phoneNum, httpOptions);\n  }\n\n  /**\n   * 手机发送验证码 (测试完成)\n   * @param {String} phoneNum 被发送验证码的手机号\n   * @returns {Observable<Result>}\n   */\n  sendVerifyCode(phoneNum: String): Observable<Result> {\n    return this.http.post<Result>(this.userUrl + `sendVerifyCodeWithAngular`, phoneNum, httpOptions);\n  }\n\n  /**\n   * 构造函数，注入一个 HttpClient服务\n   * @param {HttpClient} http\n   */\n  constructor(private http: HttpClient) {\n    this.userUrl = 'user/';\n    // this.userUrl = 'http://localhost:80/user/';\n  }\n}\n","module.exports = \"/* “登录” 二字 */\\r\\n.nf4-sign__sign-in-text{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  text-align: left;\\r\\n  color: #404040;\\r\\n  font-size: 2rem;\\r\\n  font-weight: 600;\\r\\n  padding: 0;\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 12px;\\r\\n}\\r\\n/* 登录表单上层div */\\r\\n.nf4-sign__sign-in-form{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n/* 登录表单 */\\r\\n.sign-in-form {\\r\\n  max-width: 300px;\\r\\n}\\r\\n/* 忘记密码 */\\r\\n.sign-in-forgot {\\r\\n  float: right;\\r\\n}\\r\\n/* 登录按钮 */\\r\\n.sign-in-button {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<!-- 登录模块 -->\\n<div class=\\\"sign-in\\\">\\n  <!-- brand__logo||brand__name -->\\n  <brand-layout></brand-layout>\\n  <!-- 登录模块 -->\\n  <div class=\\\"nf4-sign__sign-in\\\">\\n    <!-- 登录标题 -->\\n    <div class=\\\"nf4-sign__sign-in-text\\\">\\n      <span>登录</span>\\n    </div>\\n    <!-- 登录表单div -->\\n    <div class=\\\"nf4-sign__sign-in-form\\\">\\n      <!-- 登录表单 （含验证） -->\\n      <form nz-form [formGroup]=\\\"validateForm\\\" class=\\\"sign-in-form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <!-- 手机号码 -->\\n        <!-- nz-form-item 表单项用于区分表单中不同的区域 -->\\n        <nz-form-item [nzType]=\\\"flex\\\">\\n          <!-- 表单域 -->\\n          <nz-form-control >\\n            <!-- 带有前缀图标 “人头”-->\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-user\\\">\\n              <!-- 最多11位 -->\\n              <!-- 起别名\\\"phoneNum\\\" -->\\n              <input id=\\\"phoneNum\\\" #phoneNum nz-input formControlName=\\\"phoneNum\\\" placeholder=\\\"手机号码\\\" maxlength=\\\"11\\\" >\\n            </nz-input-group>\\n            <!-- 验证是否是否碰过这个输入域&&是否输入了手机号&&若没有则提示错误信息 -->\\n            <nz-form-explain *ngIf=\\\"validateForm.get('phoneNum').dirty && validateForm.get('phoneNum').errors\\\">请输入手机号码</nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <!-- 密码 -->\\n        <nz-form-item [nzType]=\\\"flex\\\">\\n          <nz-form-control>\\n            <!-- 带有前缀图标 \\\"锁\\\"-->\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-lock\\\">\\n              <!-- 起别名\\\"password\\\" -->\\n              <input type=\\\"password\\\" #password nz-input formControlName=\\\"password\\\" placeholder=\\\"密码\\\">\\n            </nz-input-group>\\n            <!-- 验证是否输入了密码 && 若没有则提示错误信息 -->\\n            <nz-form-explain *ngIf=\\\"validateForm.get('password').dirty && validateForm.get('password').errors\\\">请输入密码</nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <nz-form-item [nzType]=\\\"flex\\\">\\n          <nz-form-control>\\n            <!-- 是否记住密码 -->\\n            <label nz-checkbox formControlName=\\\"remember\\\">\\n              <span>记住我</span>\\n            </label>\\n            <!-- 忘记密码 -->\\n            <a class=\\\"sign-in-forgot\\\" >忘记密码</a>\\n            <!-- 登录 -->\\n            <button nz-button (click)=\\\"signIn(phoneNum.value,password.value)\\\" class=\\\"sign-in-button\\\" [nzType]=\\\"'primary'\\\">登录</button>\\n              还没有账户？\\n            <!-- 注册 -->\\n            <a routerLink=\\\"/sign-up\\\">创建一个!</a>\\n          </nz-form-control>\\n        </nz-form-item>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {NzMessageService} from 'ng-zorro-antd';\nimport {User} from '../user';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport {UserService} from '../services/user.service';\nimport {Result} from '../services/result';\n\n@Component({\n  selector: 'sign-in-layout',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  validateForm: FormGroup;\n  user: User;\n\n  createMessage(type: string): void {\n    if (type === 'success') {\n      this.message.create(type, `登录成功！正在进入您的用户中心...`);\n    } else {\n      this.message.create(type, `用户名或密码有误，请重新输入`);\n    }\n\n  }\n\n  // “登录”按钮提交\n  submitForm(): void {\n    // 循环表单的所有常规验证\n    for (const i in this.validateForm.controls) {\n      this.validateForm.controls[i].markAsDirty();\n      this.validateForm.controls[i].updateValueAndValidity();\n    }\n    console.log();\n\n  }\n\n  constructor(private fb: FormBuilder, private userService: UserService, private message: NzMessageService) {\n  }\n\n  signIn(phoneNum: String, password: String): void {\n    this.userService.login({\n      phoneNum: phoneNum,\n      password: password\n    }).subscribe((data: Result) => {\n      if (data.code === 500) {\n        this.createMessage('error');\n      } else if (data.code === 200) {\n        this.createMessage('success');\n      }\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      phoneNum: [null, [Validators.required]], // 非空输入\n      password: [null, [Validators.required]], // 非空输入\n      remember: [true]// 是否记住\n    });\n  }\n\n}\n","module.exports = \"/* “注册” 二字 */\\r\\n.nf4-sign__sign-up-text{\\r\\n  text-align: center;\\r\\n  color: #404040;\\r\\n  font-size: 2rem;\\r\\n  font-weight: 600;\\r\\n  padding: 0;\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 12px;\\r\\n}\\r\\n/* 注册表单 */\\r\\n.nf4-sign__sign-up-form{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n/* antd 样式 */\\r\\n[nz-form] {\\r\\n  max-width: 600px;\\r\\n}\"","module.exports = \"<!-- 注册模块 -->\\n<div class=\\\"sign-up\\\">\\n  <!-- brand -->\\n  <brand-layout></brand-layout>\\n  <!-- 注册表单模块 -->\\n  <div class=\\\"nf4-sign__sign-up\\\">\\n    <!-- “注册” 标题 -->\\n    <div class=\\\"nf4-sign__sign-up-text\\\">\\n      <span>注册</span>\\n    </div>\\n    <!-- 注册 表单div -->\\n    <div class=\\\"nf4-sign__sign-up-form\\\">\\n      <!-- 注册表单 -->\\n    <form nz-form [formGroup]=\\\"validateForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n      <!-- 手机号 -->\\n      <nz-form-item>\\n          <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"phoneNumber\\\" nzRequired>手机号码</nz-form-label>\\n          <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzValidateStatus]=\\\"validateForm.controls['phoneNumber']\\\">\\n            <!-- 在input前+“+86”标签 -->\\n            <nz-input-group nzAddOnBefore=\\\"+86\\\">\\n              <input formControlName=\\\"phoneNumber\\\" #phoneNumber nz-input>\\n            </nz-input-group>\\n          <!-- 判断是否修改过&&提示错误 -->\\n          <nz-form-explain *ngIf=\\\"validateForm.get('phoneNumber').dirty && validateForm.get('phoneNumber').errors\\\">请输入手机号!</nz-form-explain>\\n        </nz-form-control>\\n      </nz-form-item>\\n      <!-- 密码 -->\\n      <nz-form-item>\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"password\\\" nzRequired>密码</nz-form-label>\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n          <input nz-input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" (ngModelChange)=\\\"updateConfirmValidator()\\\">\\n          <!-- 判断是否修改过&&提示错误 -->\\n          <nz-form-explain *ngIf=\\\"validateForm.get('password').dirty && validateForm.get('password').errors\\\">请输入密码!</nz-form-explain>\\n        </nz-form-control>\\n      </nz-form-item>\\n      <!-- 确认密码 -->\\n      <nz-form-item>\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"checkPassword\\\" nzRequired>确认密码</nz-form-label>\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n          <input nz-input type=\\\"password\\\" formControlName=\\\"checkPassword\\\" id=\\\"checkPassword\\\">\\n          <!-- 判断是否修改过&&提示错误 -->\\n          <nz-form-explain *ngIf=\\\"validateForm.get('checkPassword').dirty && validateForm.get('checkPassword').errors\\\">\\n            <ng-container *ngIf=\\\"validateForm.get('checkPassword').hasError('required')\\\">\\n              请确认密码!\\n            </ng-container>\\n            <!-- 验证两次密码是否输入一致 -->\\n            <ng-container *ngIf=\\\"validateForm.get('checkPassword').hasError('confirm')\\\">\\n              您输入的两个密码不一致!\\n            </ng-container>\\n          </nz-form-explain>\\n        </nz-form-control>\\n      </nz-form-item>\\n      <!-- 用户名 -->\\n      <nz-form-item>\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"nickname\\\" nzRequired>\\n          <span>\\n            用户名\\n            <nz-tooltip nzTitle=\\\"What do you want other to call you\\\">\\n              <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\n            </nz-tooltip>\\n          </span>\\n        </nz-form-label>\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n          <input nz-input id=\\\"nickname\\\" formControlName=\\\"nickname\\\">\\n          <!-- 判断是否修改过&&提示错误 -->\\n          <nz-form-explain *ngIf=\\\"validateForm.get('nickname').dirty && validateForm.get('nickname').errors\\\">!</nz-form-explain>\\n        </nz-form-control>\\n      </nz-form-item>\\n      <!-- 验证码 -->\\n      <nz-form-item>\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"captcha\\\" nzRequired>验证码</nz-form-label>\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\n          <div nz-row [nzGutter]=\\\"8\\\">\\n            <div nz-col [nzSpan]=\\\"12\\\">\\n              <input nz-input formControlName=\\\"captcha\\\" id=\\\"captcha\\\">\\n            </div>\\n            <div nz-col [nzSpan]=\\\"12\\\">\\n              <button nz-button (click)=\\\"getCaptcha(phoneNumber.value)\\\">获取验证码</button>\\n            </div>\\n          </div>\\n          <!--<nz-form-explain *ngIf=\\\"validateForm.get('captcha').dirty && validateForm.get('captcha').errors\\\">Please input the captcha you got!</nz-form-explain>-->\\n        </nz-form-control>\\n      </nz-form-item>\\n      <!-- 协议 -->\\n      <nz-form-item nz-row style=\\\"margin-bottom:8px;\\\">\\n        <nz-form-control [nzSpan]=\\\"18\\\" [nzOffset]=\\\"4\\\">\\n          <label nz-checkbox formControlName=\\\"agree\\\">\\n            <span>我已阅读<a>《nf4用户协议》</a></span>\\n          </label>\\n        </nz-form-control>\\n      </nz-form-item>\\n      <!-- 注册按钮 -->\\n      <nz-form-item nz-row style=\\\"margin-bottom:8px;\\\">\\n        <nz-form-control [nzSpan]=\\\"14\\\" [nzOffset]=\\\"6\\\">\\n          <button nz-button nzType=\\\"primary\\\">注册</button>\\n        </nz-form-control>\\n      </nz-form-item>\\n    </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'sign-up-layout',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  validateForm: FormGroup;\n\n  submitForm(): void {\n    for (const i in this.validateForm.controls) {\n      this.validateForm.controls[ i ].markAsDirty();\n      this.validateForm.controls[ i ].updateValueAndValidity();\n    }\n  }\n\n  updateConfirmValidator(): void {\n    /** wait for refresh value */\n    Promise.resolve().then(() => this.validateForm.controls.checkPassword.updateValueAndValidity());\n  }\n\n  confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\n    if (!control.value) {\n      return { required: true };\n    } else if (control.value !== this.validateForm.controls.password.value) {\n      return { confirm: true, error: true };\n    }\n  }\n\n  getCaptcha(phoneNumber: String): void {\n    this.userService.sendVerifyCode(phoneNumber).subscribe();\n    alert(phoneNumber);\n  }\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      email            : [ null, [ Validators.email ] ],\n      password         : [ null, [ Validators.required ] ],\n      checkPassword    : [ null, [ Validators.required, this.confirmationValidator ] ],\n      nickname         : [ null, [ Validators.required ] ],\n      phoneNumberPrefix: [ '+86' ],\n      phoneNumber      : [ null, [ Validators.required ] ],\n      website          : [ null, [ Validators.required ] ],\n      captcha          : [ null, [ Validators.required ] ],\n      agree            : [ false ]\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}